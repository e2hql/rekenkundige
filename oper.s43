;----------------------------------------------------------------------------------------------
; Os registrados de R4, R5 e R6 nessa versão inicial devem conter os valores das operações
; SOMA
; R4, R5 = PARCELAS 
; R6 = SOMA OU TOTAL
;-----------------------------------------------------------------------------------------------
; SUBTRAÇÃO
; R4 = MINUENDO
; R5 = SUBRTRAENDO
; R6 = RESTO OU DIFERENÇA 
;----------------------------------------------------------------------------------------------
; MULTIPLICAÇÃO
; R4, R5 =  FATORES
; R6 = PRODUTO
;----------------------------------------------------------------------------------------------
; DIVISÃO
; R4 = DIVIDENDO
; R5 = DIVISOR
; R6 = QUOCIENTE
;----------------------------------------------------------------------------------------------
#include "msp430g2553.h"
;----------------------------------------------------------------------------------------------
        NAME   OPER
        PUBLIC SOMA_OPER, SUB_OPER, MULT_OPER, DIV_OPER
        RSEG   CODE           
;----------------------------------------------------------------------------------------------
SOMA_OPER ; REALIZA O CALCULO DE SOMA
;----------------------------------------------------------------------------------------------          
        add.w     R4,R5
        mov.w     R5,R6
        nop
        ret
;----------------------------------------------------------------------------------------------
SUB_OPER ; REALIZA O CALCULO DE SUBTRAÇÃO
;----------------------------------------------------------------------------------------------         
        sub.w     R5,R4
        mov.w     R4,R6
        nop
        ret
;----------------------------------------------------------------------------------------------
MULT_OPER ; REALIZA O CALCULO DE MULTIPLICAÇÃO
;----------------------------------------------------------------------------------------------         
        call      #VALIDAR_VAR
        ret
;----------------------------------------------------------------------------------------------
;----------------------------------------------------------------------------------------------
DIV_OPER ; REALIZA O CALCULO DE DIVISÃO
;----------------------------------------------------------------------------------------------         
        nop
        ret
;----------------------------------------------------------------------------------------------
;----------------------------------------------------------------------------------------------
LSB ; OBTEM O BYTE MENOS SIGNIFICATIVO
;----------------------------------------------------------------------------------------------
        mov.b      R4,R5
        nop     
        ret 
;----------------------------------------------------------------------------------------------
;----------------------------------------------------------------------------------------------
MSB ; REALIZA A ROTAÇÃO PARA A DIREITA AFIM DE OBTER O BYTE MAIS SIGNIFICATIVO
;----------------------------------------------------------------------------------------------
        rra         R4
        rra         R4
        rra         R4
        rra         R4
        rra         R4
        rra         R4
        rra         R4
        rra         R4
        mov.b       R4,R4
        nop
        ret 
;----------------------------------------------------------------------------------------------
R4_IS_8BIT ; INFORMA AO REGISTRADOR DE STATUS R6 SE O CONTEUDO DOS REGISTRADORES SAO DE 8 BITS
           ; SE R6 = 00001h REGISTRADOR R4 CONTEM UM VALOR DE 8 BITS
           ; SE R6 = 00000h REGISTRADOR R4 NÃO CONTEM UM VALOR DE 8 BITS
;----------------------------------------------------------------------------------------------
          push.w      R4 ; ADICIONA VALOR INFORMADO A PILHA
          rra         R4
          rra         R4
          rra         R4
          rra         R4
          rra         R4
          rra         R4
          rra         R4
          rra         R4
          mov.b       R4,R4
          BIT         #1,R4
          jeq         IS_8BIT                          
IS_16BIT: mov.w       #00000h,R6
          jmp         EXIT_R4_IS_8BIT          
IS_8BIT:  mov.w       #00001h,R6
EXIT_R4_IS_8BIT:
          pop.w       R4  ; RESTAURA O VALOR
          ret  
;----------------------------------------------------------------------------------------------
;----------------------------------------------------------------------------------------------
R5_IS_8BIT ; INFORMA AO REGISTRADOR DE STATUS R6 SE O CONTEUDO DOS REGISTRADORES SAO DE 8 BITS
           ; SE R6 = 000C3h REGISTRADOR R4 E R5 CONTEM UM VALOR DE 8 BITS
           ; SE R6 = 00080h REGISTRADOR R4 CONTEM UM VALOR DE 8 BITS E R5 NÃO CONTEM UM VALOR DE 8 BITS
;----------------------------------------------------------------------------------------------
        nop
        ret  
;----------------------------------------------------------------------------------------------
;----------------------------------------------------------------------------------------------
VALIDAR_VAR ; VALIDA OS VALORES INFORMADOS NOS REGISTRADORES PARA A REALIZAÇÃO DA OPERAÇÃO
;----------------------------------------------------------------------------------------------
        call      #R4_IS_8BIT ; VALIDA O VALOR INFORMADO NO REGISTRADOR R4
        call      #R5_IS_8BIT ; VALIDA O VALOR INFORMADO NO REGISTRADOR R5
        ret
;----------------------------------------------------------------------------------------------         
;----------------------------------------------------------------------------------------------
        END  
;----------------------------------------------------------------------------------------------
